NAME
    Cache::CacheFactory - Factory class for Cache::Cache and other modules.

VERSION
    version 1.10_01

SYNOPSIS
     use Cache::CacheFactory;

     my $cache = Cache::CacheFactory->new( storage => 'file' );

     $cache->set( 'customer', 'Fred' );
     ... Later ...
     print $cache->get( 'customer' );
     ... prints "Fred"

DESCRIPTION
    Cache::CacheFactory is a drop-in replacement for the Cache::Cache
    subclasses allowing you to access a variety of caching policies from a
    single place, mixing and matching as you choose rather than having to
    search for the cache module that provides the exact combination you
    want.

    In a nutshell you specify a policy for storage, for pruning and for
    validity checks and CacheFactory hooks you up with the right modules to
    provide that behaviour while providing you with the same API you're used
    to from Cache::Cache - the only thing you need to change is your call to
    the constructor.

    More advanced use allows you to set multiple policies for pruning and
    validity checks, and even for storage although that's currently of
    limited use.

INSTALLATION
    To install this module, run the following commands:

      perl Build.PL
      ./Build
      ./Build test
      ./Build install

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Cache::CacheFactory

    You can also look for information at:

    * RT: CPAN's request tracker
        http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cache-CacheFactory

    * AnnoCPAN: Annotated CPAN documentation
        http://annocpan.org/dist/Cache-CacheFactory

    * CPAN Ratings
        http://cpanratings.perl.org/d/Cache-CacheFactory

    * Search CPAN
        http://search.cpan.org/dist/Cache-CacheFactory

ACKNOWLEDGEMENTS
    DeWitt Clinton for the original Cache::Cache, most of the hard work is
    done by this module and its subclasses.

    Chris Winters for Class::Factory, saving me the trouble of finding out
    what policy modules are or aren't available.

    John Millaway for Cache::FastMemoryCache, which inspired the
    `no_deep_clone' option.

AUTHOR
    Sam Graham <libcache-cachefactory-perl BLAHBLAH illusori.co.uk>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2008-2011 by Sam Graham
    <libcache-cachefactory-perl BLAHBLAH illusori.co.uk>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

